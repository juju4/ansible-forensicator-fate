---

- name: ensure directory exists
  file: dest=/home/sansforensics/Downloads state=directory mode=0755

## Jenkins job looks for NSRLFile.txt.zip
## Travis disk size limit
- block:
    - name: Download NIST NSRL hash database
      get_url:
        url: "{{ ffate_nist_nsrl_archive }}"
        dest: "/home/sansforensics/Downloads/{{ ffate_nist_nsrl_archive | basename }}"
        checksum: "{{ ffate_nist_nsrl_archive_hash }}"
        mode: '0644'
    - name: decompress NIST NSRL hash database
      unarchive:
        src: "/home/sansforensics/Downloads/{{ ffate_nist_nsrl_archive | basename }}"
        dest: /home/sansforensics/Downloads
        remote_src: true
        mode: '0644'
        creates: /home/sansforensics/Downloads/NSRLFile.txt
  when: not (ansible_env['TRAVIS'] is defined and ansible_env['TRAVIS'] == 'true')
- block:
    - name: create basic NSRL file for travis (1 good, 1 bad)
      lineinfile:
        dest: /home/sansforensics/Downloads/NSRLFile.txt
        line: "{{ item }}"
        create: yes
      with_items:
        - '"SHA-1","MD5","CRC32","FileName","FileSize","ProductCode","OpSystemCode","SpecialCode"'
        - '"0000002D9D62AEBE1E0E9DB6C4C4C7C16A163D2C","1D6EBB5A789ABD108FF578263E1F40F3","FFFFFFFF","_sfx_0024._p",4109,21000,"358",""'
        - '"00020683DA11926B0265FC8604D222F49ACA7EE0","6324D1BCEA067D2921594D6866254C88","B0BCC91A","FILE_ID.DIZ",391,10614,"358",""'
  when: ansible_env['TRAVIS'] is defined and ansible_env['TRAVIS'] == 'true'

## http://www.nsrl.nist.gov/nsrl-faqs.html#faq14 Which hashes are for known bad files? just "known application files."
## https://digital-forensics.sans.org/blog/2010/02/22/extracting-known-bad-hashset-from-nsrl/
## https://github.com/jseidl/nsrlex
- name: copy NSRL extraction script
  copy:
    src: nsrlext.pl
    dest: /usr/local/bin/nsrlext.pl
    mode: '0755'
    backup: yes

- name: split NSRL db in good and bad extract
  command: >
    nsrlext.pl -n NSRLFile.txt -p NSRLProd.txt -b NSRLBad.txt -g NSRLGood.txt
    chdir=/home/sansforensics/Downloads
    creates=/home/sansforensics/Downloads/NSRLBad.txt

- name: map known NSRL good and bad to ffate expected path
  file:
    src: "{{ item.s }}"
    dest: "{{ item.d }}"
    state: link
  with_items:
    - { s: '/home/sansforensics/Downloads/NSRLBad.txt', d: '/blacklist/known_bad_files.txt' }
    - { s: '/home/sansforensics/Downloads/NSRLGood.txt', d: '/whitelist/known_good_files.txt' }

## Note: bad index will create failure at sorter execution like
##  'hdb_binsrch_open_idx: unable to open index file'
##  = regenerate, eventually md5 only depending on your box
- name: create NSRL files index with hfind (md5+sha1)
  command: "hfind -i nsrl-md5 {{ item.f }} creates={{ item.c }}"
  with_items:
    - { f: '/blacklist/known_bad_files.txt', c: '/blacklist/known_bad_files.txt-md5.idx' }
    - { f: '/whitelist/known_good_files.txt', c: '/whitelist/known_good_files.txt-md5.idx' }

